---
AWSTemplateFormatVersion: '2010-09-09'

# Any code, applications, scripts, templates, proofs of concept,
# documentation and other items are provided for illustration purposes only.
#
# Copyright 2017 Amazon Web Services
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


Parameters:

  KinesisStreamRawVoteShardCount:
    Type: Number
    Default: 1
    Description: "Shard count for raw vote kinesis stream"

  AppEnvironmentName:
    Type: String
    MinLength: 2
    MaxLength: 100
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "test"
    Description: "Application environment name"

  VpcStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "mb-vpc"
    Description: "VPC stack name"

  DbStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "mb-db"
    Description: "Db stack name"

  CiStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "mb-ci"
    Description: "Ci stack name"

  BootstrapStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "mb-bootstrap"
    Description: "Bootstrap stack name"

Resources:

  KinesisAnalyticsCustomResourceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub "KinesisAnalyticsCustomResourceSecurityGroup-${AppEnvironmentName}"
      GroupDescription: "Security group for kinesis analytics custom resource"
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-${AppEnvironmentName}-vpc-id"

  KinesisAnalyticsRawVotesReadStreamAnalyticsRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "ka-raw-votes-read-${AppEnvironmentName}"
      Path: "/service-role/"
      Policies:
        - PolicyName: !Sub "ka-raw-votes-read-policy-${AppEnvironmentName}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "kinesis:DescribeStream"
                  - "kinesis:GetShardIterator"
                  - "kinesis:GetRecords"
                Resource:
                  - !GetAtt KinesisStreamRawVote.Arn
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service:
                - "kinesisanalytics.amazonaws.com"
    DependsOn:
      - KinesisStreamRawVote

  KinesisAnalyticsAggVotesWriteStreamAnalyticsRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "ka-agg-votes-write-${AppEnvironmentName}"
      Path: "/service-role/"
      Policies:
        - PolicyName: !Sub "ka-agg-votes-write-policy-${AppEnvironmentName}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "kinesis:DescribeStream"
                  - "kinesis:PutRecord"
                  - "kinesis:PutRecords"
                Resource:
                  - !GetAtt KinesisStreamAggVote.Arn
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service:
                - "kinesisanalytics.amazonaws.com"
    DependsOn:
      - KinesisStreamAggVote

  KinesisAnalyticsCustomResourceExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "KinesisAnalyticsCustomResourceExecutionRole-${AppEnvironmentName}"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonKinesisAnalyticsFullAccess"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess"
      Path: "/"
      Policies:
          - PolicyName: !Sub "KinesisAnalyticsCustomResourceExecutionPassRolePolicy-${AppEnvironmentName}"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "iam:GetRole"
                    - "iam:PassRole"
                  Resource:
                    - !GetAtt KinesisAnalyticsAggVotesWriteStreamAnalyticsRole.Arn
                    - !GetAtt KinesisAnalyticsRawVotesReadStreamAnalyticsRole.Arn
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
    DependsOn:
      - KinesisAnalyticsAggVotesWriteStreamAnalyticsRole
      - KinesisAnalyticsRawVotesReadStreamAnalyticsRole

  KinesisAggVoteLambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "KinesisAggVoteLambdaExecutionRole-${AppEnvironmentName}"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess"
      Path: "/"
      Policies:
        -
          PolicyName: "kinesis-agg-vote-update-db"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:UpdateItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                Resource:
                  Fn::ImportValue: !Sub "${DbStackName}-event-votes-dynamodb-table-arn"

      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"

  KinesisStreamRawVote:
    Type: "AWS::Kinesis::Stream"
    Properties:
      Name: !Sub "raw-votes-${AppEnvironmentName}"
      ShardCount: !Ref KinesisStreamRawVoteShardCount

  KinesisStreamAggVote:
    Type: "AWS::Kinesis::Stream"
    Properties:
      Name: !Sub "agg-votes-${AppEnvironmentName}"
      ShardCount: 1

  KinesisAnalyticsCustomResourceLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue: !Sub "${BootstrapStackName}-${AppEnvironmentName}-bootstrap-bucket-name"
        S3Key: "kinesis_analytics.zip"
      FunctionName: !Sub "KinesisAnalyticsCustomResourceLambda-${AppEnvironmentName}"

      Handler: "kinesis_analytics.handler"
      MemorySize: 128
      Role: !GetAtt KinesisAnalyticsCustomResourceExecutionRole.Arn
      Runtime: "python2.7"
      Timeout: 300
    DependsOn:
      - KinesisAnalyticsCustomResourceExecutionRole
      - KinesisAnalyticsCustomResourceSecurityGroup
      - KinesisStreamRawVote
      - KinesisStreamAggVote

  KinesisAggVoteLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue: !Sub "${CiStackName}-lambda-app-bucket-name"
        S3Key: "vote_update.zip"
      FunctionName: !Sub "KinesisAggVoteLambda-${AppEnvironmentName}"
      Handler: "vote_update.handler"
      MemorySize: 128
      Role: !GetAtt KinesisAggVoteLambdaExecutionRole.Arn
      Runtime: "python2.7"
      Timeout: 300
      Environment:
        Variables:
          "DB_TABLE_NAME":
            Fn::ImportValue: !Sub "${DbStackName}-event-votes-dynamodb-table-name"
    DependsOn:
      - KinesisAggVoteLambdaExecutionRole
      - KinesisStreamAggVote

  KinesisAggVoteLambdaTrigger:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt KinesisStreamAggVote.Arn
      FunctionName: !Sub "KinesisAggVoteLambda-${AppEnvironmentName}"
      StartingPosition: "TRIM_HORIZON"
    DependsOn:
      - KinesisStreamAggVote
      - KinesisAggVoteLambda

  KinesisAnalyticsAppCustomResource:
    Type: "Custom::KinesisAnalyticsAppCustomResource"
    Properties:
      ServiceToken: !GetAtt KinesisAnalyticsCustomResourceLambda.Arn
      KinesisStreamRawVoteArn: !GetAtt KinesisStreamRawVote.Arn
      KinesisStreamAggVoteArn: !GetAtt KinesisStreamAggVote.Arn
      KinesisAnalyticsAggVotesWriteStreamAnalyticsRoleArn: !GetAtt KinesisAnalyticsAggVotesWriteStreamAnalyticsRole.Arn
      KinesisAnalyticsRawVotesReadStreamAnalyticsRoleArn: !GetAtt KinesisAnalyticsRawVotesReadStreamAnalyticsRole.Arn
      KinesisAnalyticsVoteAggApplicationName: !Sub "KinesisAnalyticsVoteAggApplication-${AppEnvironmentName}"
      AppEnvironmentName: !Ref AppEnvironmentName
      PhysicalResourceId: !Sub "${AWS::StackName}-vote-agg-kinesis-analytics-app"
    DependsOn:
      - KinesisAnalyticsCustomResourceLambda

Outputs:

  KinesisAnalyticsAggVotesWriteStreamAnalyticsRoleArn:
    Value: !GetAtt KinesisAnalyticsAggVotesWriteStreamAnalyticsRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-kinesis-analytics-agg-votes-write-stream-analytics-arn"

  KinesisAnalyticsRawVotesReadStreamAnalyticsRoleArn:
    Value: !GetAtt KinesisAnalyticsRawVotesReadStreamAnalyticsRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-kinesis-analytics-raw-votes-read-stream-analytics-arn"

  KinesisStreamRawVoteArn:
    Value: !GetAtt KinesisStreamRawVote.Arn
    Export:
      Name: !Sub "${AWS::StackName}-kinesis-stream-raw-vote-arn"

  KinesisStreamAggVoteArn:
    Value: !GetAtt KinesisStreamAggVote.Arn
    Export:
      Name: !Sub "${AWS::StackName}-kinesis-stream-agg-vote-arn"

  KinesisAnalyticsVoteAggAppArn:
    Value: !GetAtt KinesisAnalyticsAppCustomResource.KinesisAnalyticsAppArn
    Export:
      Name: !Sub "${AWS::StackName}-kinesis-analytics-vote-agg-app"

